<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="pepXML_std.xsl"?>
<msms_pipeline_analysis date="{{ parameters['performance parameters']['process, start time'] }}" summary_xml="{{ path_to_output }}" xmlns="http://regis-web.systemsbiology.net/pepXML" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://sashimi.sourceforge.net/schema_revision/pepXML/pepXML_v117.xsd">
   <msms_run_summary base_name="{{ path_to_file }}" search_engine="X! Tandem" raw_data_type="raw" raw_data=".?">
   {%- for protease in proteases %}
      <sample_enzyme name="{{ protease.name }}">
        <specificity cut="{{ protease.cut }}" no_cut="{{ protease.no_cut}}" sense="{{ protease.sense }}"/>
      </sample_enzyme>
   {%- endfor %}
      <search_summary base_name="{{ path_to_file }}" search_engine="X! Tandem" precursor_mass_type="monoisotopic" fragment_mass_type="{{ parameters['input parameters']['spectrum, fragment mass type'] }}" search_id="1">
         <search_database local_path="{{ parameters['performance parameters']['list path, sequence source #1']}}" type="AA"/>
         <enzymatic_search_constraint enzyme="{{ parameters['input parameters']['protein, cleavage site']}}" max_num_internal_cleavages="{{ parameters['input parameters']['scoring, maximum missed cleavage sites'] }}" min_number_termini="2" />
   {%- for modification in modifications %}
   <aminoacid_modification aminoacid="{{ modification.aminoacid }}" massdiff="{{ '{:.5f}'.format(modification.massdiff) }}" mass="{{ '{:.5f}'.format(modification.mass) }}" variable="{{ 'Y' if modification.variable else 'N' }}"/>
   {%- endfor %}
   {%- for term_modification in term_modifications %}
   <terminal_modification terminus="{{ term_modification.terminus_lower }}" massdiff="{{ '{:.5f}'.format(term_modification.massdiff) }}" mass="{{ '{:.5f}'.format(term_modification.mass) }}" protein_terminus="{{ term_modification.terminus }}" variable="{{ 'Y' if term_modification.variable else 'N' }}" symbol="^" /><!--X! Tandem n-terminal AA variable modification-->'
   {%- endfor %}

         <!-- Input parameters -->
   {%- for key, value in parameters['input parameters'].items() %}
         <parameter name="{{ key }}" value="{{ value }}"/>
   {%- endfor %}
         <!-- Unused input parameters -->
   {%- for key, value in parameters['unused input parameters'].items() %}
         <parameter name="{{ key }}" value="{{ value }}"/>
   {%- endfor %}
         <!-- Performance parameters -->
   {%- for key, value in parameters['performance parameters'].items() %}
         <parameter name="{{ key }}" value="{{ value }}"/>
   {%- endfor %}
      </search_summary>
   {%- for psm in psms %}
   <spectrum_query spectrum="{{ psm.spectrum }}" start_scan="{{ psm.start_scan }}" end_scan="{{ psm.end_scan }}" precursor_neutral_mass="{{ '{:.6f}'.format(psm.precursor_neutral_mass) }}" assumed_charge="{{ psm.assumed_charge }}" index="{{ loop.index }}"{%- if psm.rt is not none %} retention_time_sec="{{ psm.rt }}"{%- endif %}>
      <search_result>
          <search_hit hit_rank="{{ psm.hit_rank }}" peptide="{{ psm.sequence }}" peptide_prev_aa="{{ psm.peptide_prev_aa }}" peptide_next_aa="{{ psm.peptide_next_aa }}" protein="{{ psm.protein }}" protein_descr="{{ psm.protein_descr }}" num_tot_proteins="{{ psm.num_tot_proteins }}" num_matched_ions="{{ psm.num_matched_ions }}" tot_num_ions="{{ psm.tot_num_ions }}" calc_neutral_pep_mass="{{ '{:.6f}'.format(psm.calc_neutral_mass) }}" massdiff="{{ '{:.6f}'.format(psm.massdiff) }}" num_tol_term="{{ psm.num_tol_term }}" num_missed_cleavages="{{ psm.num_missed_cleavages }}" is_rejected="0">
         {%- for protein in psm.alternative_proteins %}
            <alternative_protein protein="{{ protein.dbname }}" protein_descr="{{ protein.descr }}" num_tol_term="{{ protein.num_tol_term }}"/>
         {%- endfor %}
         {%- if psm.modifications or psm.mod_label_n or psm.mod_label_c %}
            <modification_info{{ psm.mod_label|safe }}>
         {%- endif %}
         {%- for modification in psm.modifications %}
               <mod_aminoacid_mass position="{{ modification.position }}" mass="{{ modification.mass }}" />
         {%- endfor %}
         {%- if psm.modifications or psm.mod_label_n or psm.mod_label_c %}
            </modification_info>
         {%- endif %}
         {%- for score_name, score_value in psm.scores.items() %}
            <search_score name="{{ score_name }}" value="{{ score_value }}"/>
         {%- endfor %}
         </search_hit>
      </search_result>
      </spectrum_query>
   {%- endfor %}
   </msms_run_summary>
</msms_pipeline_analysis>

